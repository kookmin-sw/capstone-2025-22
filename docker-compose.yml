x-common-variables: &common-variables
  CLIENT_GATEWAY_SERVICE_URL: http://gateway-service:8080
  SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/let_me_drum
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: 1234
  SPRING_DATA_REDIS_HOST: redis
  SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
  EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
  GATEWAY_SERVICE_URL: http://localhost:28080

services:
  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    restart: always
    environment:
      <<: *common-variables
      ENV_AUTH_GOOGLE_CLIENT_ID: "192735377707-2mo11es6vu2becaaomfrher8dvcdu8qs.apps.googleusercontent.com"
      ENV_AUTH_GOOGLE_CLIENT_SECRET: "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"
      ENV_AUTH_GOOGLE_CLIENT_REDIRECT_URI: "http://localhost:3000"
    depends_on:
      - discovery-service
      - config-server
      - gateway-service
      - db
      - redis
  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    restart: always
    environment:
      <<: *common-variables
    depends_on:
      - discovery-service
      - config-server
      - gateway-service
      - db
      - redis
  verification-service:
    build:
      context: .
      dockerfile: ./verification-service/Dockerfile
    container_name: verification-service
    restart: always
    environment:
      <<: *common-variables
    depends_on:
      - discovery-service
      - config-server
      - gateway-service
      - db
      - redis
  gateway-service:
    build:
      context: .
      dockerfile: ./gateway-service/Dockerfile
    container_name: gateway-service
    restart: always
    ports:
      - "28080:8080"
    environment:
      <<: *common-variables
    depends_on:
      - discovery-service
  config-server:
    build:
      context: .
      dockerfile: ./config-server/Dockerfile
    container_name: config-server
    restart: always
    ports:
      - "28888:8888"
  discovery-service:
    build:
      context: .
      dockerfile: ./discovery-service/Dockerfile
    container_name: discovery-service
    restart: always
    ports:
      - "28761:8761"
  db:
    image: mysql:8.0
    container_name: database_letmedrum
    restart: unless-stopped
    ports:
      - "23306:3306"
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: let_me_drum
      MYSQL_ROOT_PASSWORD: 1234
      TZ: Asia/Seoul
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d
  redis:
    image: redis:6.2.6-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/data:/data
      - ./redis/config:/usr/local/etc/redis/redis.conf
    restart: always
