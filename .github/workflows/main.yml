on:
  push:
    branches:
      - main

jobs:
  builds:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, user-service, verification-service, gateway-service, music-service, discovery-service]
    steps:
        # 현재 리포지토리 코드를 git action 실행 환경으로 받아옴
        - uses: actions/checkout@v3
        # java 17 버전 준비
        - name: Set Up Java 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: "temurin"
        # gradle 빌드 캐싱
        - name: gradle build caching
          uses: actions/cache@v3
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gralde*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner-os }}-gradle-
        # gradle 실행을 위한 세팅
        - name: gradle setup
          uses: gradle/gradle-build-action@v2
        # submodule을 포함하여 다시 체크아웃
        - name: checkout repo with submodule
          uses: action/checkout@v4
          with: 
            token: ${{ secrets.ACCESS_TOKEN }}
            submodules: true
        # 프로젝트 빌드하기
        - name: Build :${{ matrix.service }}
          run: |
            chmod 777 ./gradlew
            ./gradlew :${{ matrix.service }}:build
        # 도커 로그인
        - name: Docker Hub Login
          uses: docker/login-action@v3
          with:
            username: ${{secrets.DOCKER_USERNAME}}
            password: ${{secrets.DOCKER_PASSWORD}}
        # 도커 이미지 push하기
        - name: Build Docker Image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ${{ matrix.service }}/Dockerfile
            push: true
            tags: test
          
  
  
